<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_26) on Wed Jun 15 09:20:51 EDT 2011 -->
<TITLE>
FileUtils
</TITLE>

<META NAME="date" CONTENT="2011-06-15">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="FileUtils";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../gov/noaa/ncdc/crn/util/ConversionUtils.html" title="class in gov.noaa.ncdc.crn.util"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../gov/noaa/ncdc/crn/util/MailUtils.html" title="class in gov.noaa.ncdc.crn.util"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?gov/noaa/ncdc/crn/util/FileUtils.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="FileUtils.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
gov.noaa.ncdc.crn.util</FONT>
<BR>
Class FileUtils</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>gov.noaa.ncdc.crn.util.FileUtils</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>FileUtils</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;char[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#newlineArray">newlineArray</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#FileUtils()">FileUtils</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#copyFile(java.lang.String, java.util.Set)">copyFile</A></B>(java.lang.String&nbsp;source,
         java.util.Set&lt;java.lang.String&gt;&nbsp;targetDirs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copies a file</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#copyStream(java.io.InputStream, java.io.OutputStream)">copyStream</A></B>(java.io.InputStream&nbsp;input,
           java.io.OutputStream&nbsp;output)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copies contents of InputStream input into OutputStream output</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#copyStream(java.io.InputStream, java.io.OutputStream, int)">copyStream</A></B>(java.io.InputStream&nbsp;input,
           java.io.OutputStream&nbsp;output,
           int&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copies contents of InputStream input into OutputStream output, using a byte buffer the size of size</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.io.File</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#createDir(java.lang.String)">createDir</A></B>(java.lang.String&nbsp;dirName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a directory and its parent directory structure</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.io.File</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#createFile(java.lang.String)">createFile</A></B>(java.lang.String&nbsp;fileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a file and its parent directory structure</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#createMD5File(java.lang.String, java.lang.String)">createMD5File</A></B>(java.lang.String&nbsp;infile,
              java.lang.String&nbsp;outfile)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#createParentDirectory(java.lang.String)">createParentDirectory</A></B>(java.lang.String&nbsp;fileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a parent directory for a File</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#createZipChecksumFile(java.lang.String, java.lang.String)">createZipChecksumFile</A></B>(java.lang.String&nbsp;infile,
                      java.lang.String&nbsp;outfile)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#createZipFile(java.lang.String, java.io.File[])">createZipFile</A></B>(java.lang.String&nbsp;zipFile,
              java.io.File[]&nbsp;files)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a zip file containing files</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#createZipFile(java.lang.String, java.io.File[], java.lang.String)">createZipFile</A></B>(java.lang.String&nbsp;zipFile,
              java.io.File[]&nbsp;files,
              java.lang.String&nbsp;excludeParent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a zip file containing files</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#createZipFile2(java.lang.String, java.io.File[])">createZipFile2</A></B>(java.lang.String&nbsp;zipFile,
               java.io.File[]&nbsp;files)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#deleteDirectory(java.io.File)">deleteDirectory</A></B>(java.io.File&nbsp;dir)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete a directory and all of its contents.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#deleteDirectoryContents(java.io.File)">deleteDirectoryContents</A></B>(java.io.File&nbsp;dir)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete a directory's contents.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#getMD5(java.lang.String)">getMD5</A></B>(java.lang.String&nbsp;file)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#getZipChecksum(java.lang.String)">getZipChecksum</A></B>(java.lang.String&nbsp;file)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.util.List&lt;java.lang.String&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#listRecursive(java.lang.String)">listRecursive</A></B>(java.lang.String&nbsp;file)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Recursively lists file names</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#newline()">newline</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the system line separator String</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#readline(java.io.BufferedReader)">readline</A></B>(java.io.BufferedReader&nbsp;input)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#readLine(java.io.FileInputStream)">readLine</A></B>(java.io.FileInputStream&nbsp;fis)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#readWholeFile(java.lang.String)">readWholeFile</A></B>(java.lang.String&nbsp;filename)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a String that contains the entire contents of a text file.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#unzip(java.lang.String, java.lang.String)">unzip</A></B>(java.lang.String&nbsp;zipFile,
      java.lang.String&nbsp;localDir)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extracts zip file into local directory</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#wrap(java.lang.String, int, int, int)">wrap</A></B>(java.lang.String&nbsp;string,
     int&nbsp;width,
     int&nbsp;leftPad,
     int&nbsp;rightPad)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a String of a specified width and padding
 Presumes no newlines already exist in String</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#wrap(java.lang.String, int, int, int, int)">wrap</A></B>(java.lang.String&nbsp;string,
     int&nbsp;width,
     int&nbsp;leftPad,
     int&nbsp;rightPad,
     int&nbsp;hanging)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a String of a specified width and padding and hanging indention
 Presumes no newlines already exist in String</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#writeLine(java.io.Writer, java.lang.String)">writeLine</A></B>(java.io.Writer&nbsp;writer,
          java.lang.String&nbsp;line)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes a String to a writer plus a newline character based on System specifications</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../gov/noaa/ncdc/crn/util/FileUtils.html#zipDir(java.lang.String, java.util.zip.ZipOutputStream)">zipDir</A></B>(java.lang.String&nbsp;dir2zip,
       java.util.zip.ZipOutputStream&nbsp;zos)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds an entire directory and its contents to a zip file</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="newlineArray"><!-- --></A><H3>
newlineArray</H3>
<PRE>
public static final char[] <B>newlineArray</B></PRE>
<DL>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="FileUtils()"><!-- --></A><H3>
FileUtils</H3>
<PRE>
public <B>FileUtils</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="createFile(java.lang.String)"><!-- --></A><H3>
createFile</H3>
<PRE>
public static java.io.File <B>createFile</B>(java.lang.String&nbsp;fileName)
                               throws java.io.IOException</PRE>
<DL>
<DD>Creates a file and its parent directory structure
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fileName</CODE> - The full path of the file to create
<DT><B>Returns:</B><DD>The file which was created
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="createParentDirectory(java.lang.String)"><!-- --></A><H3>
createParentDirectory</H3>
<PRE>
public static void <B>createParentDirectory</B>(java.lang.String&nbsp;fileName)
                                  throws java.io.IOException</PRE>
<DL>
<DD>Creates a parent directory for a File
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fileName</CODE> - the File name
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="createDir(java.lang.String)"><!-- --></A><H3>
createDir</H3>
<PRE>
public static java.io.File <B>createDir</B>(java.lang.String&nbsp;dirName)
                              throws java.io.IOException</PRE>
<DL>
<DD>Creates a directory and its parent directory structure
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dirName</CODE> - The full path of the directory to create
<DT><B>Returns:</B><DD>The file which was created
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="writeLine(java.io.Writer, java.lang.String)"><!-- --></A><H3>
writeLine</H3>
<PRE>
public static void <B>writeLine</B>(java.io.Writer&nbsp;writer,
                             java.lang.String&nbsp;line)
                      throws java.io.IOException</PRE>
<DL>
<DD>Writes a String to a writer plus a newline character based on System specifications
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>writer</CODE> - The Writer to write to<DD><CODE>line</CODE> - The line to write
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="deleteDirectory(java.io.File)"><!-- --></A><H3>
deleteDirectory</H3>
<PRE>
public static void <B>deleteDirectory</B>(java.io.File&nbsp;dir)</PRE>
<DL>
<DD>Delete a directory and all of its contents. Assumes dir is a directory;
 if it is a file, this method won't delete it.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dir</CODE> - The directory to delete</DL>
</DD>
</DL>
<HR>

<A NAME="deleteDirectoryContents(java.io.File)"><!-- --></A><H3>
deleteDirectoryContents</H3>
<PRE>
public static void <B>deleteDirectoryContents</B>(java.io.File&nbsp;dir)</PRE>
<DL>
<DD>Delete a directory's contents. Assumes dir is a directory;
 if it is a file, this method won't delete it.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dir</CODE> - The directory to delete</DL>
</DD>
</DL>
<HR>

<A NAME="newline()"><!-- --></A><H3>
newline</H3>
<PRE>
public static java.lang.String <B>newline</B>()</PRE>
<DL>
<DD>Returns the system line separator String
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The system line separator String.</DL>
</DD>
</DL>
<HR>

<A NAME="wrap(java.lang.String, int, int, int, int)"><!-- --></A><H3>
wrap</H3>
<PRE>
public static java.lang.String <B>wrap</B>(java.lang.String&nbsp;string,
                                    int&nbsp;width,
                                    int&nbsp;leftPad,
                                    int&nbsp;rightPad,
                                    int&nbsp;hanging)</PRE>
<DL>
<DD>Creates a String of a specified width and padding and hanging indention
 Presumes no newlines already exist in String
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>string</CODE> - The String to format<DD><CODE>width</CODE> - The width of the new String<DD><CODE>leftPad</CODE> - The number of spaces to left pad the formatted String<DD><CODE>rightPad</CODE> - The number of spaces to right pad the formatted String<DD><CODE>hanging</CODE> - The number of spaces to left pad paragraph lines differently than the first line. Can be 
 negative, but hanging+leftPad must be positive
<DT><B>Returns:</B><DD>The formatted String</DL>
</DD>
</DL>
<HR>

<A NAME="wrap(java.lang.String, int, int, int)"><!-- --></A><H3>
wrap</H3>
<PRE>
public static java.lang.String <B>wrap</B>(java.lang.String&nbsp;string,
                                    int&nbsp;width,
                                    int&nbsp;leftPad,
                                    int&nbsp;rightPad)</PRE>
<DL>
<DD>Creates a String of a specified width and padding
 Presumes no newlines already exist in String
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>string</CODE> - The String to format<DD><CODE>width</CODE> - The width of the new String<DD><CODE>leftPad</CODE> - The number of spaces to left pad the formatted String<DD><CODE>rightPad</CODE> - The number of spaces to right pad the formatted String
<DT><B>Returns:</B><DD>The formatted String</DL>
</DD>
</DL>
<HR>

<A NAME="createZipFile(java.lang.String, java.io.File[])"><!-- --></A><H3>
createZipFile</H3>
<PRE>
public static void <B>createZipFile</B>(java.lang.String&nbsp;zipFile,
                                 java.io.File[]&nbsp;files)
                          throws java.io.IOException</PRE>
<DL>
<DD>Creates a zip file containing files
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>zipFile</CODE> - The name of the zip file<DD><CODE>files</CODE> - The files to include in the zip file
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="createZipFile2(java.lang.String, java.io.File[])"><!-- --></A><H3>
createZipFile2</H3>
<PRE>
public static void <B>createZipFile2</B>(java.lang.String&nbsp;zipFile,
                                  java.io.File[]&nbsp;files)
                           throws java.io.IOException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="zipDir(java.lang.String, java.util.zip.ZipOutputStream)"><!-- --></A><H3>
zipDir</H3>
<PRE>
public static void <B>zipDir</B>(java.lang.String&nbsp;dir2zip,
                          java.util.zip.ZipOutputStream&nbsp;zos)
                   throws java.io.IOException</PRE>
<DL>
<DD>Adds an entire directory and its contents to a zip file
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dir2zip</CODE> - the directory to add to the zip file<DD><CODE>zos</CODE> - the OutputStream for the zip file
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="createZipFile(java.lang.String, java.io.File[], java.lang.String)"><!-- --></A><H3>
createZipFile</H3>
<PRE>
public static void <B>createZipFile</B>(java.lang.String&nbsp;zipFile,
                                 java.io.File[]&nbsp;files,
                                 java.lang.String&nbsp;excludeParent)
                          throws java.io.IOException</PRE>
<DL>
<DD>Creates a zip file containing files
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>zipFile</CODE> - The name of the zip file<DD><CODE>files</CODE> - The files to include in the zip file
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="unzip(java.lang.String, java.lang.String)"><!-- --></A><H3>
unzip</H3>
<PRE>
public static void <B>unzip</B>(java.lang.String&nbsp;zipFile,
                         java.lang.String&nbsp;localDir)
                  throws java.io.IOException</PRE>
<DL>
<DD>Extracts zip file into local directory
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>zipFile</CODE> - <DD><CODE>localDir</CODE> - 
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="createZipChecksumFile(java.lang.String, java.lang.String)"><!-- --></A><H3>
createZipChecksumFile</H3>
<PRE>
public static void <B>createZipChecksumFile</B>(java.lang.String&nbsp;infile,
                                         java.lang.String&nbsp;outfile)
                                  throws java.io.IOException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getZipChecksum(java.lang.String)"><!-- --></A><H3>
getZipChecksum</H3>
<PRE>
public static long <B>getZipChecksum</B>(java.lang.String&nbsp;file)
                           throws java.io.FileNotFoundException,
                                  java.io.IOException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.FileNotFoundException</CODE>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="createMD5File(java.lang.String, java.lang.String)"><!-- --></A><H3>
createMD5File</H3>
<PRE>
public static void <B>createMD5File</B>(java.lang.String&nbsp;infile,
                                 java.lang.String&nbsp;outfile)
                          throws java.io.IOException,
                                 java.security.NoSuchAlgorithmException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE>
<DD><CODE>java.security.NoSuchAlgorithmException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getMD5(java.lang.String)"><!-- --></A><H3>
getMD5</H3>
<PRE>
public static java.lang.String <B>getMD5</B>(java.lang.String&nbsp;file)
                               throws java.io.FileNotFoundException,
                                      java.io.IOException,
                                      java.security.NoSuchAlgorithmException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.FileNotFoundException</CODE>
<DD><CODE>java.io.IOException</CODE>
<DD><CODE>java.security.NoSuchAlgorithmException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="copyStream(java.io.InputStream, java.io.OutputStream, int)"><!-- --></A><H3>
copyStream</H3>
<PRE>
public static void <B>copyStream</B>(java.io.InputStream&nbsp;input,
                              java.io.OutputStream&nbsp;output,
                              int&nbsp;size)
                       throws java.lang.Exception</PRE>
<DL>
<DD>Copies contents of InputStream input into OutputStream output, using a byte buffer the size of size
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>input</CODE> - input stream<DD><CODE>output</CODE> - output stream<DD><CODE>size</CODE> - 
<DT><B>Throws:</B>
<DD><CODE>java.lang.Exception</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="copyStream(java.io.InputStream, java.io.OutputStream)"><!-- --></A><H3>
copyStream</H3>
<PRE>
public static void <B>copyStream</B>(java.io.InputStream&nbsp;input,
                              java.io.OutputStream&nbsp;output)
                       throws java.lang.Exception</PRE>
<DL>
<DD>Copies contents of InputStream input into OutputStream output
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>input</CODE> - input stream<DD><CODE>output</CODE> - output stream
<DT><B>Throws:</B>
<DD><CODE>java.lang.Exception</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="copyFile(java.lang.String, java.util.Set)"><!-- --></A><H3>
copyFile</H3>
<PRE>
public static void <B>copyFile</B>(java.lang.String&nbsp;source,
                            java.util.Set&lt;java.lang.String&gt;&nbsp;targetDirs)
                     throws java.io.IOException</PRE>
<DL>
<DD>Copies a file
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>source</CODE> - Name of source file<DD><CODE>targetDirs</CODE> - Set of target directories (as strings)
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="listRecursive(java.lang.String)"><!-- --></A><H3>
listRecursive</H3>
<PRE>
public static java.util.List&lt;java.lang.String&gt; <B>listRecursive</B>(java.lang.String&nbsp;file)</PRE>
<DL>
<DD>Recursively lists file names
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>file</CODE> - The root of the directory/file to recurse
<DT><B>Returns:</B><DD>List of files</DL>
</DD>
</DL>
<HR>

<A NAME="readline(java.io.BufferedReader)"><!-- --></A><H3>
readline</H3>
<PRE>
public static java.lang.String <B>readline</B>(java.io.BufferedReader&nbsp;input)
                                 throws java.io.IOException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="readLine(java.io.FileInputStream)"><!-- --></A><H3>
readLine</H3>
<PRE>
public static java.lang.String <B>readLine</B>(java.io.FileInputStream&nbsp;fis)
                                 throws java.io.IOException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="readWholeFile(java.lang.String)"><!-- --></A><H3>
readWholeFile</H3>
<PRE>
public static java.lang.String <B>readWholeFile</B>(java.lang.String&nbsp;filename)
                                      throws java.io.IOException</PRE>
<DL>
<DD>Returns a String that contains the entire contents of a text file. Note that this method
 does not consider the case where the file is too large to be contained within memory and as
 such should be used with caution.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>filename</CODE> - The file to get the contents of.
<DT><B>Returns:</B><DD>String containing the contents of the file
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../gov/noaa/ncdc/crn/util/ConversionUtils.html" title="class in gov.noaa.ncdc.crn.util"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../gov/noaa/ncdc/crn/util/MailUtils.html" title="class in gov.noaa.ncdc.crn.util"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?gov/noaa/ncdc/crn/util/FileUtils.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="FileUtils.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
